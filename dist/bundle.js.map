{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://Kursovaya_4/./src/js/templateEngine.js","webpack://Kursovaya_4/./src/js/game.js"],"sourcesContent":["export function templateEngine(block) {\r\n    if (block === undefined || block === null || block === false) {\r\n        return document.createTextNode('');\r\n    }\r\n\r\n    if (typeof block === 'string' || typeof block === 'number' || block === true) {\r\n        return document.createTextNode(block);\r\n    }\r\n\r\n    if (Array.isArray(block)) {\r\n        const fragment = document.createDocumentFragment();\r\n        block.forEach((item) => {\r\n            const elem = templateEngine(item);\r\n            fragment.appendChild(elem);\r\n        });\r\n\r\n        return fragment;\r\n    }\r\n\r\n    const tag = document.createElement(block.tag);\r\n\r\n    if (block.cls) {\r\n        tag.classList.add(...[].concat(block.cls).filter(Boolean));\r\n    }\r\n\r\n    if (block.attrs) {\r\n        const keys = Object.keys(block.attrs);\r\n\r\n        keys.forEach((key) => {\r\n            tag.setAttribute(key, block.attrs[key]);\r\n        });\r\n    }\r\n\r\n    const content = templateEngine(block.content);\r\n\r\n    tag.appendChild(content);\r\n\r\n    return tag;\r\n}\r\n","import '/style.scss';\r\nimport { templateEngine } from './templateEngine.js';\r\n// import DECK_CARDS from './DECK_CARDS.js';\r\n\r\nwindow.game = {\r\n    // CARDS_QUANTITY: '',\r\n    DIFFICULT: '',\r\n    GAME_STATUS: 'CHOOSE_DIFFICULT',\r\n    DECK_CARDS: [\r\n        'spades_ace',\r\n        'spades_king',\r\n        'spades_queen',\r\n        'spades_jack',\r\n        'spades_ten',\r\n        'spades_nine',\r\n        'spades_eight',\r\n        'spades_seven',\r\n        'spades_six',\r\n        'diamonds_ace',\r\n        'diamonds_king',\r\n        'diamonds_queen',\r\n        'diamonds_jack',\r\n        'diamonds_ten',\r\n        'diamonds_nine',\r\n        'diamonds_eight',\r\n        'diamonds_seven',\r\n        'diamonds_six',\r\n        'clubs_ace',\r\n        'clubs_king',\r\n        'clubs_queen',\r\n        'clubs_jack',\r\n        'clubs_ten',\r\n        'clubs_nine',\r\n        'clubs_eight',\r\n        'clubs_seven',\r\n        'clubs_six',\r\n        'hearts_ace',\r\n        'hearts_king',\r\n        'hearts_queen',\r\n        'hearts_jack',\r\n        'hearts_ten',\r\n        'hearts_nine',\r\n        'hearts_eight',\r\n        'hearts_seven',\r\n        'hearts_six',\r\n    ],\r\n    RANDOM_CARDS: [],\r\n};\r\n\r\nconst screenDifficult = document.querySelector('.screen-difficult');\r\nconst blockDifficult = screenDifficult.querySelector('.difficult');\r\nconst buttonStart = blockDifficult.querySelector('.difficult__button-start');\r\n\r\nconst screenPlay = document.querySelector('.screen-play');\r\n// const btnStartAgain = screenPlay.querySelector('.header__button-start-again');\r\nconst fieldPlay = screenPlay.querySelector('.field-play');\r\n\r\nblockDifficult.addEventListener('click', (event) => {\r\n    const target = event.target;\r\n\r\n    window.game.DIFFICULT = target.dataset.level;\r\n\r\n    const buttonsLevel = blockDifficult.querySelectorAll('.difficult__button-level');\r\n    for (const buttonLevel of buttonsLevel) {\r\n        buttonLevel.classList.remove('difficult__button-level_select');\r\n    }\r\n\r\n    target.classList.add('difficult__button-level_select');\r\n});\r\n\r\nfunction getRandomCard(arr) {\r\n    let randomCard = Math.floor(Math.random() * arr.length);\r\n\r\n    return arr[randomCard];\r\n}\r\n\r\nfunction shuffleDeckCards(arr) {\r\n    let shuffleArr = arr.concat(arr);\r\n\r\n    for (let i = shuffleArr.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [shuffleArr[i], shuffleArr[j]] = [shuffleArr[j], shuffleArr[i]];\r\n    }\r\n\r\n    return shuffleArr;\r\n}\r\n\r\nfunction renderGamePlay() {\r\n    for (let i = 0; i < Number(window.game.DIFFICULT); i++) {\r\n        const randomCard = getRandomCard(window.game.DECK_CARDS);\r\n\r\n        if (!window.game.RANDOM_CARDS.includes(randomCard)) {\r\n            window.game.RANDOM_CARDS[i] = randomCard;\r\n        } else {\r\n            i = i - 1;\r\n        }\r\n        /**\r\n         * const suits = ['spades', 'hearts', 'clubs', 'diamonds'];\r\n         * const ranks = ['ace', 'king', 'queen', 'jack', 'ten', 'nine', 'eight', 'seven', 'six'];\r\n         * сделать две переменные с рандомом на каждый массив\r\n         * результат: название карты = сложить две переменные \"spades + '_' + ace\"\r\n         */\r\n    }\r\n    const fragmentBlockCards = document.createDocumentFragment();\r\n    const shuffleCards = shuffleDeckCards(window.game.RANDOM_CARDS);\r\n    shuffleCards.forEach((card) => {\r\n        fragmentBlockCards.appendChild(\r\n            templateEngine({\r\n                tag: 'div',\r\n                cls: ['card'], // 'card__card-back'],\r\n                attrs: {\r\n                    'data-card_name': card,\r\n                    // style: `background-image: url('src/static/${card}.png')`,\r\n                },\r\n                // content: [\r\n                //     {\r\n                //         tag: 'img',\r\n                //         cls: ['card__card-back', 'card__card-back_hidden'],\r\n                //         attrs: {\r\n                //             src: 'src/images/card_back.png',\r\n                //             alt: 'card_back',\r\n                //         },\r\n                //     },\r\n                //     {\r\n                //         tag: 'img',\r\n                //         cls: ['card__card-face'],\r\n                //         attrs: {\r\n                //             src: `src/images/${card}.png`,\r\n                //             alt: card,\r\n                //         },\r\n                //     },\r\n                // ],\r\n            })\r\n        );\r\n    });\r\n\r\n    fieldPlay.appendChild(fragmentBlockCards);\r\n\r\n    const cards = fieldPlay.querySelectorAll('.card');\r\n\r\n    cards.forEach((card) => (card.style.backgroundImage = `url(./static/${card.dataset.card_name}.png`));\r\n\r\n    setTimeout(() => {\r\n        cards.forEach((card) => (card.style.backgroundImage = `url(./static/card_back.png`));\r\n    }, 5000);\r\n\r\n    let hasSelectedCard = false;\r\n    let firstSelectCard;\r\n    let secondSelectCard;\r\n\r\n    function disableCard(card) {\r\n        card.setAttribute('disabled', 'disable');\r\n    }\r\n\r\n    function unDisableCard(card) {\r\n        card.removeAttribute('disabled');\r\n    }\r\n\r\n    function selectCard() {\r\n        // debugger;\r\n        console.log(this.dataset.card_name);\r\n        this.style.backgroundImage = `url(./static/${this.dataset.card_name}.png`;\r\n\r\n        if (this === firstSelectCard) return;\r\n\r\n        if (!hasSelectedCard) {\r\n            hasSelectedCard = true;\r\n            firstSelectCard = this;\r\n            disableCard(firstSelectCard);\r\n            return;\r\n        }\r\n\r\n        secondSelectCard = this;\r\n        hasSelectedCard = false;\r\n\r\n        setTimeout(checkCard, 500);\r\n    }\r\n\r\n    function checkCard() {\r\n        if (firstSelectCard.dataset.card_name === secondSelectCard.dataset.card_name) {\r\n            disableCard(secondSelectCard);\r\n\r\n            alert('ВЫ УГАДАЛИ!!!');\r\n\r\n            firstSelectCard = null;\r\n            secondSelectCard = null;\r\n            return;\r\n        }\r\n\r\n        alert('НЕ УГАДАЛИ!!!');\r\n\r\n        firstSelectCard.style.backgroundImage = `url(./static/card_back.png`;\r\n        secondSelectCard.style.backgroundImage = `url(./static/card_back.png`;\r\n\r\n        unDisableCard(firstSelectCard);\r\n        unDisableCard(secondSelectCard);\r\n\r\n        firstSelectCard = null;\r\n        secondSelectCard = null;\r\n    }\r\n\r\n    cards.forEach((card) => card.addEventListener('click', selectCard));\r\n}\r\n\r\nbuttonStart.addEventListener('click', () => {\r\n    if (window.game.DIFFICULT || (!(window.game.DIFFICULT === '') && !(window.game.DIFFICULT === undefined))) {\r\n        screenDifficult.classList.add('screen-difficult_hidden');\r\n        screenPlay.classList.remove('screen-play_hidden');\r\n    }\r\n\r\n    window.game.GAME_STATUS = 'PLAY';\r\n\r\n    const buttonsLevel = blockDifficult.querySelectorAll('.difficult__button-level');\r\n    for (const buttonLevel of buttonsLevel) {\r\n        buttonLevel.classList.add('difficult__button-level_alert');\r\n        setTimeout(() => buttonLevel.classList.remove('difficult__button-level_alert'), 1500);\r\n    }\r\n\r\n    renderGamePlay();\r\n});\r\n\r\n// btnStartAgain.addEventListener('click', () => {\r\n//     fieldCardsFace.classList.add('field-play-face_hidden');\r\n//     fieldCardsBack.classList.remove('field-play-back_hidden');\r\n// });\r\n"],"names":["templateEngine","block","document","createTextNode","Array","isArray","fragment","createDocumentFragment","forEach","item","elem","appendChild","tag","createElement","cls","classList","add","concat","filter","Boolean","attrs","Object","keys","key","setAttribute","content","window","game","DIFFICULT","GAME_STATUS","DECK_CARDS","RANDOM_CARDS","screenDifficult","querySelector","blockDifficult","buttonStart","screenPlay","fieldPlay","renderGamePlay","i","Number","randomCard","arr","Math","floor","random","length","includes","fragmentBlockCards","shuffleCards","shuffleArr","j","shuffleDeckCards","card","cards","querySelectorAll","style","backgroundImage","dataset","card_name","setTimeout","firstSelectCard","secondSelectCard","hasSelectedCard","disableCard","unDisableCard","removeAttribute","selectCard","console","log","this","checkCard","alert","addEventListener","event","target","level","buttonsLevel","buttonLevel","remove","undefined"],"sourceRoot":""}